#!/usr/bin/env bash
set -euo pipefail

MOD_DIR="$(cd -- "$(dirname "${BASH_SOURCE[0]}")" >/dev/null 2>&1 && pwd)"
. "${MOD_DIR}/../lib/common.sh"
: "${VARS_FILE:?}"

# --- vars ---------------------------------------------------------------
: "${VARS:=${VARS_FILE}}"
dkim::vars() {
  DOMAIN="$(yq -r '.domain' "$VARS")"
  SELECTOR="$(yq -r '.dkim_selector // "s1"' "$VARS")"
  HOSTNAME="$(yq -r '.hostname // ("mail." + .domain)' "$VARS")"
  IPV4="$(yq -r '.ipv4' "$VARS")"
  DKIM_SOCK="unix:/var/spool/postfix/opendkim/opendkim.sock"
  DMARC_SOCK="unix:/var/spool/postfix/opendmarc/opendmarc.sock"
}

# --- dirs / perms -------------------------------------------------------
dkim::prepare_dirs() {
  run install -d -m 0750 -o opendkim -g opendkim "/etc/opendkim/keys/${DOMAIN}"
  run install -d -m 0750 -o opendkim -g postfix   /var/spool/postfix/opendkim
}

# --- key ---------------------------------------------------------------
dkim::ensure_key() {
  local dir="/etc/opendkim/keys/${DOMAIN}"
  local priv="${dir}/${SELECTOR}.private"
  if [[ ! -f "$priv" ]]; then
    log "OpenDKIM: генерирую ключ 1024 (чтобы TXT не резался)"
    run opendkim-genkey -b 1024 -s "$SELECTOR" -d "$DOMAIN" -D "$dir"
    run chown opendkim:opendkim "${dir}/${SELECTOR}.private" "${dir}/${SELECTOR}.txt"
    run chmod 0600 "${dir}/${SELECTOR}.private"
  fi
}

# --- tables ------------------------------------------------------------
dkim::write_tables() {
  printf '%s\n' \
    "${SELECTOR}._domainkey.${DOMAIN} ${DOMAIN}:${SELECTOR}:/etc/opendkim/keys/${DOMAIN}/${SELECTOR}.private" \
    | run install -D -m 0644 /dev/stdin /etc/opendkim/KeyTable


  printf '%s\n' \
    "127.0.0.1" "::1" "localhost" "$HOSTNAME" "$IPV4" \
    | run install -D -m 0644 /dev/stdin /etc/opendkim/TrustedHosts

  run chown opendkim:opendkim /etc/opendkim/{KeyTable,SigningTable,TrustedHosts}
  run chmod 0644 /etc/opendkim/{KeyTable,SigningTable,TrustedHosts}
}

# --- opendkim.conf -----------------------------------------------------
dkim::write_conf() {
  # даём минимальный, но полный конфиг; UserID дублим тут и в systemd-override (не мешает)
  cat <<'EOF' | run install -D -m 0644 /dev/stdin /etc/opendkim.conf
Syslog                  yes
LogWhy                  yes
UMask                   007
Mode                    sv
AutoRestart             yes
PidFile                 /run/opendkim/opendkim.pid

Socket                  local:/var/spool/postfix/opendkim/opendkim.sock
UserID                  opendkim:postfix

KeyTable                file:/etc/opendkim/KeyTable
SigningTable            file:/etc/opendkim/SigningTable
InternalHosts           /etc/opendkim/TrustedHosts
ExternalIgnoreList      /etc/opendkim/TrustedHosts

Canonicalization        relaxed/simple
MinimumKeyBits          1024
OversignHeaders         From
TrustAnchorFile         /usr/share/dns/root.key
EOF
}

# --- systemd override (группа postfix, маска 007) ----------------------
dkim::systemd_override() {
  run install -d -m 0755 /etc/systemd/system/opendkim.service.d
  cat <<'EOF' | run install -m 0644 /dev/stdin /etc/systemd/system/opendkim.service.d/override.conf
[Service]
User=opendkim
Group=postfix
UMask=007
ReadWritePaths=/var/spool/postfix/opendkim
EOF
  run systemctl daemon-reload
}

# --- postfix milters (25/587/465) --------------------------------------
dkim::wire_postfix() {
  # базовые milter-настройки
  run postconf -e "milter_protocol=6"
  run postconf -e "milter_default_action=accept"

  # собираем список milters: всегда DKIM, DMARC — если сокет есть
  local sockets="$DKIM_SOCK"
  [[ -S /var/spool/postfix/opendmarc/opendmarc.sock ]] && sockets="${sockets},${DMARC_SOCK}"

  # на smtp (25): аккуратно добавим недостающие, сохраняя порядок DKIM→DMARC
  local have
  have="$(postconf -h smtpd_milters || true)"
  if [[ -z "${have// }" ]]; then
    have="$sockets"
  else
    if ! grep -q 'opendkim/opendkim\.sock' <<<"$have"; then
      have="${DKIM_SOCK}${have:+,${have}}"
    fi
    if [[ "$sockets" == *opendmarc* ]] && ! grep -q 'opendmarc/opendmarc\.sock' <<<"$have"; then
      have="${have},${DMARC_SOCK}"
    fi
  fi
  run postconf -e "smtpd_milters=${have}"
  run postconf -e "non_smtpd_milters=${have}"

  # на submission(587) и smtps(465) — именно ENDPOINT'ы (без $переменных)
  run postconf -P "submission/inet/milter_macro_daemon_name=ORIGINATING"
  run postconf -P "smtps/inet/milter_macro_daemon_name=ORIGINATING"
  run postconf -P "submission/inet/smtpd_milters=${sockets}"
  run postconf -P "smtps/inet/smtpd_milters=${sockets}"

  run systemctl reload postfix
}

# --- restart + export TXT ----------------------------------------------
dkim::restart_and_export_txt() {
  run systemctl enable --now opendkim
  run systemctl restart opendkim

  run install -d -m 0755 /var/local/msa
  run install -m 0644 "/etc/opendkim/keys/${DOMAIN}/${SELECTOR}.txt" /var/local/msa/dkim.txt
  log "OpenDKIM: TXT экспортирован в /var/local/msa/dkim.txt"
}

# --- main --------------------------------------------------------------
module::main() {
  dkim::vars
  log "OpenDKIM: настройка (selector=${SELECTOR}, domain=${DOMAIN})"
  dkim::prepare_dirs
  dkim::ensure_key
  dkim::write_tables
  dkim::write_conf
  dkim::systemd_override
  dkim::wire_postfix
  dkim::restart_and_export_txt

  # sanity checks
  if ! sudo -u postfix test -w /var/spool/postfix/opendkim/opendkim.sock; then
    ERR "postfix не имеет доступа к opendkim.sock"
    exit 1
  fi
  log "OpenDKIM готов. Если DNS уже обновлён, проверь: opendkim-testkey -d ${DOMAIN} -s ${SELECTOR} -vvv"
}

module::main "$@"
